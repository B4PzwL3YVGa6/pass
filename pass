#!/bin/sh

umask 077

PROGRAM="$0"
STOREDIR="$HOME/.secstore"

[ ! -d "$STOREDIR" ] && mkdir "$STOREDIR"
cd "$STOREDIR"

[ -z "$EDITOR" ] && EDITOR=vi

aes_command='aes -i=/dev/stdin -p=false'

die() {
	echo "$@" >&2
	exit 1
}

cmd_help() {
	echo "-h\n\tThis helpful menu."
	echo "-a name\n\tAdd a new file."
	echo "-d name\n\tDelete the file."
	echo "-m name\n\tMake a new directory."
	echo "-s name\n\tDecrypt and print the file to stdout"
	echo "\t\tor list the files in the directory"
	echo "-c name\n\tDecrypt and copy the file to clipboard."
	echo "-e name\n\tDecrypt and open the file in an editor."
}

cmd_list() {
	cd "$STOREDIR/$2"
	for f in *; do
		if [ -d "$f" ]; then
			echo "$1$f/"
			cmd_list "$1   " "$2/$f"
			cd "$STOREDIR/$2"
		else
			echo "$1/$f" | sed "s/.aes//"
		fi
	done
}

cmd_show() {
	if [ -d "$1" ]; then
		cmd_list "" "$1"
		exit 0
	fi

	local file="$1.aes"
	[ ! -f "$file" ] && die "$1 does not exist."
	
	get_pass
	
	local tmpfile=$(mktemp)
	
	echo "$password" \
		| $aes_command -d "$file" > "$tmpfile" \
			&& cat "$tmpfile" \
			|| echo "Decryption Failed"

	rm "$tmpfile"
}

cmd_copy() {
	if [ -d "$1" ]; then
		cmd_list "" "$1"
		exit 0
	fi

	local file="$1.aes"
	[ ! -f "$file" ] && die "$1 does not exist."
	
	get_pass
	
	local tmpfile=$(mktemp)
	
	echo "$password" \
		| $aes_command -d "$file" > "$tmpfile" \
			&& $(cat "$tmpfile" | xsel -b -i) \
			|| echo "Decryption Failed"

	rm "$tmpfile"
}

cmd_remove() {
	if [ -d "$1" ]; then
		file="$1"
	elif [ -a "$1.aes" ]; then
		file="$1.aes"
	else
		die "$1 does not exist"
	fi

	echo -n "Really remove $file (and possibly subfiles)? [y/n]: "
	read answer
	[ "$answer" != "y" ] && exit
	rm -r "$file"
	echo "Removed $file"
}

cmd_new() {
	local file="$1.aes"
	[ -a "$file" ] && die "$1 already exists"
	
	get_pass

	local tmp=$(mktemp)
	
	"$EDITOR" "$tmp"
	echo "$password" | $aes_command -e "$tmp" > "$file"
	rm "$tmp"
}

cmd_mkdir() {
	[ -a "$1" ] && die "$1 exists"
	mkdir "$1"
}

get_pass() {
	echo -n "Enter password: " >&2
	stty -echo
	exec 3<&0 # save stdin
	exec 0</dev/tty # re route stdin
	read password
	exec 0<&3 # restore stdin
	stty echo
	echo
}

[ -z "$1" ] && cmd_list "" "." && exit 0

case "$1" in
	-h)      	cmd_help ;;
	-a) shift;	cmd_new "${@}" ;;
	-m) shift;	cmd_mkdir "${@}" ;;
	-s) shift;	cmd_show "${@}" ;;
	-c) shift;	cmd_copy "${@}" ;;
	-d) shift;	cmd_remove "${@}" ;;
	-e) shift;	cmd_edit "${@}" ;;
esac
exit 0
